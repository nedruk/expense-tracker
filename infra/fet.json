{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "administratorLogin": {
          "type": "string"
      },
      "administratorLoginPassword": {
          "type": "securestring"
      },
      "collation": {
          "type": "string"
      },
      "databaseName": {
          "type": "string"
      },
      "tier": {
          "type": "string"
      },
      "skuName": {
          "type": "string"
      },
      "location": {
          "type": "string"
      },
      "maxSizeBytes": {
          "type": "int"
      },
      "serverName": {
          "type": "string"
      },
      "sampleName": {
          "type": "string",
          "defaultValue": ""
      },
      "zoneRedundant": {
          "type": "bool",
          "defaultValue": false
      },
      "licenseType": {
          "type": "string",
          "defaultValue": ""
      },
      "readScaleOut": {
          "type": "string",
          "defaultValue": "Disabled"
      },
      "numberOfReplicas": {
          "type": "int",
          "defaultValue": 0
      },
      "minCapacity": {
          "type": "string",
          "defaultValue": ""
      },
      "autoPauseDelay": {
          "type": "string",
          "defaultValue": ""
      },
      "enableADS": {
          "type": "bool",
          "defaultValue": false
      },
      "allowAzureIps": {
          "type": "bool",
          "defaultValue": true
      },
      "databaseTags": {
          "type": "object",
          "defaultValue": {}
      },
      "serverTags": {
          "type": "object",
          "defaultValue": {}
      },
      "enableVA": {
          "type": "bool",
          "defaultValue": false
      },
      "enablePrivateEndpoint": {
          "type": "bool",
          "defaultValue": false
      },
      "privateEndpointNestedTemplateId": {
          "type": "string",
          "defaultValue": ""
      },
      "privateEndpointSubscriptionId": {
          "type": "string",
          "defaultValue": ""
      },
      "privateEndpointResourceGroup": {
          "type": "string",
          "defaultValue": ""
      },
      "privateEndpointName": {
          "type": "string",
          "defaultValue": ""
      },
      "privateEndpointLocation": {
          "type": "string",
          "defaultValue": ""
      },
      "privateEndpointSubnetId": {
          "type": "string",
          "defaultValue": ""
      },
      "privateLinkServiceName": {
          "type": "string",
          "defaultValue": ""
      },
      "privateLinkServiceServiceId": {
          "type": "string",
          "defaultValue": ""
      },
      "privateEndpointVnetSubscriptionId": {
          "type": "string",
          "defaultValue": ""
      },
      "privateEndpointVnetResourceGroup": {
          "type": "string",
          "defaultValue": ""
      },
      "privateEndpointVnetName": {
          "type": "string",
          "defaultValue": ""
      },
      "privateEndpointSubnetName": {
          "type": "string",
          "defaultValue": ""
      },
      "enablePrivateDnsZone": {
          "type": "bool",
          "defaultValue": false
      },
      "privateEndpointDnsRecordUniqueId": {
          "type": "string",
          "defaultValue": ""
      },
      "privateEndpointTemplateLink": {
          "type": "string",
          "defaultValue": ""
      },
      "privateDnsForPrivateEndpointTemplateLink": {
          "type": "string",
          "defaultValue": ""
      },
      "privateDnsForPrivateEndpointNicTemplateLink": {
          "type": "string",
          "defaultValue": ""
      },
      "privateDnsForPrivateEndpointIpConfigTemplateLink": {
          "type": "string",
          "defaultValue": ""
      },
      "allowClientIp": {
          "type": "bool",
          "defaultValue": false
      },
      "clientIpRuleName": {
          "type": "string",
          "defaultValue": ""
      },
      "clientIpValue": {
          "type": "string",
          "defaultValue": ""
      },
      "subscriptionId": {
            "type": "string"
        },
        "faname": {
            "type": "string"
        },
        "hostingEnvironment": {
            "type": "string"
        },
        "hostingPlanName": {
            "type": "string"
        },
        "serverFarmResourceGroup": {
            "type": "string"
        },
        "alwaysOn": {
            "type": "bool"
        },
        "storageAccountName": {
            "type": "string"
        },
        "storageAccountName_appdata": {
            "type": "string"
        },
        "linuxFxVersion": {
            "type": "string"
        },
        "sku": {
            "type": "string"
        },
        "skuCode": {
            "type": "string"
        },
        "workerSize": {
            "type": "string"
        },
        "workerSizeId": {
            "type": "string"
        },
        "numberOfWorkers": {
            "type": "string"
        }
  },
  "variables": {
      "subscriptionId": "[subscription().subscriptionId]",
      "resourceGroupName": "[resourceGroup().name]",
      "uniqueStorage": "[uniqueString(variables('subscriptionId'), variables('resourceGroupName'), parameters('location'))]",
      "storageName": "[tolower(concat('sqlva', variables('uniqueStorage')))]",
      "privateEndpointContainerTemplateName": "[concat('PrivateEndpointContainer-', if(parameters('enablePrivateEndpoint'), parameters('privateEndpointNestedTemplateId'), ''))]",
      "subnetPoliciesTemplateName": "[concat('SubnetPolicies-', if(parameters('enablePrivateEndpoint'), parameters('privateEndpointNestedTemplateId'), ''))]",
      "privateEndpointTemplateName": "[concat('PrivateEndpoint-', if(parameters('enablePrivateEndpoint'), parameters('privateEndpointNestedTemplateId'), ''))]",
      "deploymentTemplateApi": "2018-05-01",
      "privateEndpointApi": "2019-04-01",
      "privateEndpointId": "[if(parameters('enablePrivateEndpoint'), resourceId(parameters('privateEndpointSubscriptionId'), parameters('privateEndpointResourceGroup'), 'Microsoft.Network/privateEndpoints', parameters('privateEndpointName')), '')]",
      "privateEndpointVnetId": "[if(parameters('enablePrivateEndpoint'), resourceId(parameters('privateEndpointVnetSubscriptionId'), parameters('privateEndpointVnetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('privateEndpointVnetName')), '')]",
      "privateEndpointSubnetResourceId": "[if(parameters('enablePrivateEndpoint'), resourceId(parameters('privateEndpointVnetSubscriptionId'), parameters('privateEndpointVnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('privateEndpointVnetName'), parameters('privateEndpointSubnetName')), '')]"
  },
  "resources": [
      {
          "condition": "[parameters('enableVA')]",
          "apiVersion": "2016-01-01",
          "type": "Microsoft.Storage/storageAccounts",
          "name": "[variables('storageName')]",
          "location": "[parameters('location')]",
          "sku": {
            "name": "Standard_LRS"
          },
          "kind": "Storage",
          "properties": {}
        },
        {
          "apiVersion": "2015-05-01-preview",
          "type": "Microsoft.Sql/servers",
          "location": "[parameters('location')]",
          "tags": "[parameters('serverTags')]",
          "name": "[parameters('serverName')]",
          "properties": {
              "administratorLogin": "[parameters('administratorLogin')]",
              "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
              "version": "12.0"
          },
          "resources": [
              {
                  "apiVersion": "2017-10-01-preview",
                  "dependsOn": [
                      "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
                  ],
                  "location": "[parameters('location')]",
                  "type": "databases",
                  "tags": "[parameters('databaseTags')]",
                  "name": "[parameters('databaseName')]",
                  "properties": {
                      "collation": "[parameters('collation')]",
                      "maxSizeBytes": "[parameters('maxSizeBytes')]",
                      "sampleName": "[parameters('sampleName')]",
                      "zoneRedundant": "[parameters('zoneRedundant')]",
                      "licenseType": "[parameters('licenseType')]",
                      "readScale": "[parameters('readScaleOut')]",
                      "readReplicaCount": "[parameters('numberOfReplicas')]",
                      "minCapacity": "[parameters('minCapacity')]",
                      "autoPauseDelay": "[parameters('autoPauseDelay')]"
                  },
                  "sku": {
                      "name": "[parameters('skuName')]",
                      "tier": "[parameters('tier')]"
                  }
              },
              {
                  "condition": "[parameters('allowAzureIps')]",
                  "apiVersion": "2014-04-01-preview",
                  "type": "firewallrules",
                  "dependsOn": [
                      "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
                  ],
                  "location": "[parameters('location')]",
                  "name": "AllowAllWindowsAzureIps",
                  "properties": {
                      "endIpAddress": "0.0.0.0",
                      "startIpAddress": "0.0.0.0"
                  }
              },
              {
                  "condition": "[parameters('allowClientIp')]",
                  "apiVersion": "2014-04-01-preview",
                  "type": "firewallrules",
                  "dependsOn": [
                      "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
                  ],
                  "location": "[parameters('location')]",
                  "name": "[parameters('clientIpRuleName')]",
                  "properties": {
                      "endIpAddress": "[parameters('clientIpValue')]",
                      "startIpAddress": "[parameters('clientIpValue')]"
                  }
              },
              {
                  "condition": "[parameters('enableADS')]",
                  "apiVersion": "2017-03-01-preview",
                  "type": "securityAlertPolicies",
                  "name": "Default",
                  "dependsOn": [
                      "[concat('Microsoft.Sql/servers/', parameters('serverName'))]",
                      "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/databases/', parameters('databaseName'))]"
                  ],
                  "properties": {
                      "state": "Enabled",
                      "disabledAlerts": [],
                      "emailAddresses": [],
                      "emailAccountAdmins": true
                  }
              },
              {
                  "condition": "[parameters('enableVA')]",
                  "apiVersion": "2018-06-01-preview",
                  "type": "vulnerabilityAssessments",
                  "name": "Default",
                  "properties": {
                      "storageContainerPath": "[if(parameters('enableVA'), concat(reference(variables('storageName'), '2018-02-01').primaryEndpoints.blob, 'vulnerability-assessment'), '')]",
                      "storageAccountAccessKey": "[if(parameters('enableVA'), listKeys(variables('storageName'), '2018-02-01').keys[0].value, '')]",
                      "recurringScans": {
                          "isEnabled": true,
                          "emailSubscriptionAdmins": true,
                          "emails": []
                      }
                  },
                  "dependsOn": [
                      "[concat('Microsoft.Sql/servers/', parameters('serverName'))]",
                      "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
                      "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/securityAlertPolicies/Default')]"
                  ]
              }
          ]
      },
      {
          "condition": "[parameters('enablePrivateEndpoint')]",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "[variables('deploymentTemplateApi')]",
          "name": "[variables('subnetPoliciesTemplateName')]",
          "properties": {
              "mode": "Incremental",
              "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": [
                      {
                          "apiVersion": "[variables('privateEndpointApi')]",
                          "name": "[concat(parameters('privateEndpointVnetName'), '/', parameters('privateEndpointSubnetName'))]",
                          "location": "[parameters('privateEndpointLocation')]",
                          "properties": {
                              "privateEndpointNetworkPolicies": "Disabled"
                          },
                          "type": "Microsoft.Network/virtualNetworks/subnets"
                      }
                  ]
              }
          },
          "subscriptionId": "[if(parameters('enablePrivateEndpoint'), parameters('privateEndpointVnetSubscriptionId'), variables('subscriptionId'))]",
          "resourceGroup": "[if(parameters('enablePrivateEndpoint'), parameters('privateEndpointVnetResourceGroup'), variables('resourceGroupName'))]"
      },
      {
          "condition": "[parameters('enablePrivateEndpoint')]",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "[variables('deploymentTemplateApi')]",
          "name": "[variables('privateEndpointTemplateName')]",
          "dependsOn": [
              "[resourceId(variables('subscriptionId'), variables('resourceGroupName'), 'Microsoft.Sql/servers/databases/', parameters('serverName'), parameters('databaseName'))]",
              "[variables('subnetPoliciesTemplateName')]"
          ],
          "properties": {
              "mode": "Incremental",
              "parameters": {
                  "privateEndpointName": {
                      "value": "[parameters('privateEndpointName')]"
                  },
                  "privateEndpointConnectionId": {
                      "value": ""
                  },
                  "privateEndpointConnectionName": {
                      "value": "[parameters('privateLinkServiceName')]"
                  },
                  "privateEndpointId": {
                      "value": "[variables('privateEndpointId')]"
                  },
                  "privateEndpointApiVersion": {
                      "value": "[variables('privateEndpointApi')]"
                  },
                  "privateLinkServiceId": {
                      "value": "[parameters('privateLinkServiceServiceId')]"
                  },
                  "groupId": {
                      "value": "SqlServer"
                  },
                  "subnetId": {
                      "value": "[variables('privateEndpointSubnetResourceId')]"
                  },
                  "location": {
                      "value": "[parameters('privateEndpointLocation')]"
                  },
                  "tags": {
                      "value": {}
                  }
              },
              "templatelink": {
                  "contentVersion": "1.0.0.0",
                  "uri": "[parameters('privateEndpointTemplateLink')]"
              }
          },
          "subscriptionId": "[if(parameters('enablePrivateEndpoint'), parameters('privateEndpointSubscriptionId'), variables('subscriptionId'))]",
          "resourceGroup": "[if(parameters('enablePrivateEndpoint'), parameters('privateEndpointResourceGroup'), variables('resourceGroupName'))]"
      },
      {
          "condition": "[and(parameters('enablePrivateEndpoint'), parameters('enablePrivateDnsZone'))]",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "[variables('deploymentTemplateApi')]",
          "name": "[concat('PrivateDns-', parameters('privateEndpointNestedTemplateId'))]",
          "dependsOn": [
              "[variables('privateEndpointTemplateName')]"
          ],
          "properties": {
              "mode": "Incremental",
              "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": [
                      {
                          "type": "Microsoft.Network/privateDnsZones",
                          "apiVersion": "2018-09-01",
                          "name": "[string('privatelink.database.windows.net')]",
                          "location": "global",
                          "tags": {},
                          "properties": {}
                      },
                      {
                          "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                          "apiVersion": "2018-09-01",
                          "name": "[concat(string('privatelink.database.windows.net'), '/', uniqueString(variables('privateEndpointVnetId')))]",
                          "location": "global",
                          "dependsOn": [
                              "[string('privatelink.database.windows.net')]"
                          ],
                          "properties": {
                              "virtualNetwork": {
                                  "id": "[variables('privateEndpointVnetId')]"
                              },
                              "registrationEnabled": false
                          }
                      },
                      {
                          "apiVersion": "[variables('deploymentTemplateApi')]",
                          "name": "[concat('EndpointDnsRecords-', parameters('privateEndpointDnsRecordUniqueId'))]",
                          "type": "Microsoft.Resources/deployments",
                          "dependsOn": [
                              "[string('privatelink.database.windows.net')]"
                          ],
                          "properties": {
                              "mode": "Incremental",
                              "templatelink": {
                                  "contentVersion": "1.0.0.0",
                                  "uri": "[parameters('privateDnsForPrivateEndpointTemplateLink')]"
                              },
                              "parameters": {
                                  "privateDnsName": {
                                      "value": "[string('privatelink.database.windows.net')]"
                                  },
                                  "privateEndpointNicResourceId": {
                                      "value": "[if(parameters('enablePrivateEndpoint'), reference(concat('Microsoft.Resources/deployments/', variables('privateEndpointTemplateName'))).outputs.networkInterfaceId.value, '')]"
                                  },
                                  "nicRecordsTemplateUri": {
                                      "value": "[parameters('privateDnsForPrivateEndpointNicTemplateLink')]"
                                  },
                                  "ipConfigRecordsTemplateUri": {
                                      "value": "[parameters('privateDnsForPrivateEndpointIpConfigTemplateLink')]"
                                  },
                                  "uniqueId": {
                                      "value": "[parameters('privateEndpointDnsRecordUniqueId')]"
                                  },
                                  "existingRecords": {
                                      "value": {}
                                  }
                              }
                          }
                      }
                  ]
              }
          },
          "subscriptionId": "[if(parameters('enablePrivateEndpoint'), parameters('privateEndpointVnetSubscriptionId'), variables('subscriptionId'))]",
          "resourceGroup": "[if(parameters('enablePrivateEndpoint'), parameters('privateEndpointVnetResourceGroup'), variables('resourceGroupName'))]"
      },
      {
            "apiVersion": "2018-11-01",
            "name": "[parameters('faname')]",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp,linux",
            "location": "[parameters('location')]",
            "tags": {},
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
            ],
            "properties": {
                "name": "[parameters('faname')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "python"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
                        }
                    ]
                },
                "serverFarmId": "[concat('/subscriptions/', parameters('subscriptionId'),'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                "hostingEnvironment": "[parameters('hostingEnvironment')]",
                "clientAffinityEnabled": false
            }
        },
        {
            "apiVersion": "2018-11-01",
            "name": "[parameters('hostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[parameters('location')]",
            "kind": "linux",
            "tags": {},
            "dependsOn": [],
            "properties": {
                "name": "[parameters('hostingPlanName')]",
                "workerSize": "[parameters('workerSize')]",
                "workerSizeId": "[parameters('workerSizeId')]",
                "numberOfWorkers": "[parameters('numberOfWorkers')]",
                "reserved": true,
                "hostingEnvironment": "[parameters('hostingEnvironment')]"
            },
            "sku": {
                "Tier": "[parameters('sku')]",
                "Name": "[parameters('skuCode')]"
            }
        },
        {
            "apiVersion": "2019-06-01",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "apiVersion": "2019-06-01",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageAccountName_appdata')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "supportsHttpsTrafficOnly": true
            }
        }
  ]
}